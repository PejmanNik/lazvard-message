name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        rid: [win-x64, win-arm64, linux-x64, linux-arm, osx-x64, osx-arm64]
    name: Build for ${{ matrix.rid }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"

      - name: publish app for ${{ matrix.rid }}
        run: dotnet publish src/Lazvard.Message.Cli -r ${{ matrix.rid }} -c Release -o ./publish /p:DebugType=None /p:DebugSymbols=false

      - name: Archive release for ${{ matrix.rid }}
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          directory: "./publish/"
          filename: "${{ matrix.rid }}.zip"
          path: "."

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: "./publish/${{ matrix.rid }}.zip"
  
      - name: Push ${{ matrix.rid }}.zip to release
        uses: ncipollo/release-action@v1
        if: ${{ github.event_name == 'push' }}
        with:
          artifacts: "./publish/${{ matrix.rid }}.zip"
          allowUpdates: true
          draft: true

  nuget:
    runs-on: ubuntu-latest
    name: Nuget Push
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"
      - name: build app
        run: dotnet build src/Lazvard.Message.Amqp.Server -c Release -o ./publish/
      - name: Nuget Push
        run: dotnet nuget push ./publish/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate

  docker:
    runs-on: ubuntu-latest
    name: Push Docker image to Docker Hub
    permissions:
      id-token: write
      contents: read
      attestations: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pejmann/lazvard-message

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: index.docker.io/pejmann/lazvard-message
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
